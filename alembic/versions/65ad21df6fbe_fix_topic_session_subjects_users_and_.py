"""fix topic_session, subjects, users and delete user_subjects

Revision ID: 65ad21df6fbe
Revises: 9c22e3712c56
Create Date: 2025-05-22 18:36:16.965206

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '65ad21df6fbe'
down_revision: Union[str, None] = '9c22e3712c56'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_subjects_id', table_name='user_subjects')
    op.drop_table('user_subjects')
    op.drop_constraint('subject_sessions_subject_id_fkey', 'subject_sessions', type_='foreignkey')
    op.drop_constraint('subject_sessions_user_id_fkey', 'subject_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'subject_sessions', 'subjects', ['subject_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'subject_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('subjects', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'subjects', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_topic_session_session_id'), 'topic_session', ['session_id'], unique=False)
    op.create_index(op.f('ix_topic_session_topic_id'), 'topic_session', ['topic_id'], unique=False)
    op.drop_constraint('topics_subject_id_fkey', 'topics', type_='foreignkey')
    op.create_foreign_key(None, 'topics', 'subjects', ['subject_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'topics', type_='foreignkey') # type: ignore
    op.create_foreign_key('topics_subject_id_fkey', 'topics', 'subjects', ['subject_id'], ['id'])
    op.drop_index(op.f('ix_topic_session_topic_id'), table_name='topic_session')
    op.drop_index(op.f('ix_topic_session_session_id'), table_name='topic_session')
    op.drop_constraint(None, 'subjects', type_='foreignkey') # type: ignore
    op.drop_column('subjects', 'user_id')
    op.drop_constraint(None, 'subject_sessions', type_='foreignkey') # type: ignore
    op.drop_constraint(None, 'subject_sessions', type_='foreignkey') # type: ignore
    op.create_foreign_key('subject_sessions_user_id_fkey', 'subject_sessions', 'users', ['user_id'], ['id'])
    op.create_foreign_key('subject_sessions_subject_id_fkey', 'subject_sessions', 'subjects', ['subject_id'], ['id'])
    op.create_table('user_subjects',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='user_subjects_subject_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_subjects_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_subjects_pkey')
    )
    op.create_index('ix_user_subjects_id', 'user_subjects', ['id'], unique=False)
    # ### end Alembic commands ###
